<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="9" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-03T13:19:18 IST" name="Suite" finished-at="2022-10-03T13:24:14 IST" duration-ms="296455">
    <groups>
    </groups>
    <test started-at="2022-10-03T13:19:18 IST" name="Test" finished-at="2022-10-03T13:24:14 IST" duration-ms="296455">
      <class name="com.idream.iprepLearning.tests.RegisterationpageTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:19:18 IST" name="setup" finished-at="2022-10-03T13:19:19 IST" duration-ms="1150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:19:19 IST" name="loginSetup" finished-at="2022-10-03T13:19:32 IST" duration-ms="13086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="register()[pri:1, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:19:32 IST" name="register" finished-at="2022-10-03T13:19:40 IST" duration-ms="8140" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Name field is required.] but found [all fields are required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Name field is required.] but found [all fields are required]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.idream.iprepLearning.Pages.RegistrationPage.validateSignUp(RegistrationPage.java:61)
at com.idream.iprepLearning.tests.RegisterationpageTest.register(RegisterationpageTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:19:40 IST" name="tearDown" finished-at="2022-10-03T13:19:42 IST" duration-ms="2000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register status=FAILURE method=RegisterationpageTest.register()[pri:1, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:19:42 IST" name="loginSetup" finished-at="2022-10-03T13:19:48 IST" duration-ms="5778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="validateCred()[pri:2, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:19:48 IST" name="validateCred" finished-at="2022-10-03T13:20:02 IST" duration-ms="13568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCred -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:20:02 IST" name="tearDown" finished-at="2022-10-03T13:20:04 IST" duration-ms="2454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCred status=SUCCESS method=RegisterationpageTest.validateCred()[pri:2, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:20:04 IST" name="loginSetup" finished-at="2022-10-03T13:20:10 IST" duration-ms="5949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="validCredentials()[pri:3, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:20:10 IST" name="validCredentials" finished-at="2022-10-03T13:20:32 IST" duration-ms="21992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:20:32 IST" name="tearDown" finished-at="2022-10-03T13:20:34 IST" duration-ms="1931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validCredentials status=SUCCESS method=RegisterationpageTest.validCredentials()[pri:3, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:20:34 IST" name="loginSetup" finished-at="2022-10-03T13:20:41 IST" duration-ms="6422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyOTP()[pri:4, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:20:41 IST" name="verifyOTP" finished-at="2022-10-03T13:20:58 IST" duration-ms="17683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTP -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:20:58 IST" name="tearDown" finished-at="2022-10-03T13:21:00 IST" duration-ms="1773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOTP status=SUCCESS method=RegisterationpageTest.verifyOTP()[pri:4, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:00 IST" name="loginSetup" finished-at="2022-10-03T13:21:05 IST" duration-ms="5086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="validatePasswordBar()[pri:5, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:05 IST" name="validatePasswordBar" finished-at="2022-10-03T13:21:17 IST" duration-ms="11552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePasswordBar -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:17 IST" name="tearDown" finished-at="2022-10-03T13:21:18 IST" duration-ms="1585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordBar status=SUCCESS method=RegisterationpageTest.validatePasswordBar()[pri:5, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:18 IST" name="loginSetup" finished-at="2022-10-03T13:21:24 IST" duration-ms="5370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="validateUsername()[pri:6, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:24 IST" name="validateUsername" finished-at="2022-10-03T13:21:31 IST" duration-ms="7352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:31 IST" name="tearDown" finished-at="2022-10-03T13:21:33 IST" duration-ms="1656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUsername status=SUCCESS method=RegisterationpageTest.validateUsername()[pri:6, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:33 IST" name="loginSetup" finished-at="2022-10-03T13:21:38 IST" duration-ms="5395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="signUp()[pri:7, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:38 IST" name="signUp" finished-at="2022-10-03T13:21:53 IST" duration-ms="14950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:53 IST" name="tearDown" finished-at="2022-10-03T13:21:55 IST" duration-ms="1813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUp status=SUCCESS method=RegisterationpageTest.signUp()[pri:7, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:21:55 IST" name="loginSetup" finished-at="2022-10-03T13:22:00 IST" duration-ms="5077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="invalidSignUp()[pri:8, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:00 IST" name="invalidSignUp" finished-at="2022-10-03T13:22:16 IST" duration-ms="15807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSignUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:16 IST" name="tearDown" finished-at="2022-10-03T13:22:18 IST" duration-ms="1772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidSignUp status=SUCCESS method=RegisterationpageTest.invalidSignUp()[pri:8, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:18 IST" name="loginSetup" finished-at="2022-10-03T13:22:24 IST" duration-ms="5951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="validateGmailSignUp()[pri:8, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:24 IST" name="validateGmailSignUp" finished-at="2022-10-03T13:22:40 IST" duration-ms="16777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGmailSignUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:40 IST" name="tearDown" finished-at="2022-10-03T13:22:43 IST" duration-ms="2629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateGmailSignUp status=SUCCESS method=RegisterationpageTest.validateGmailSignUp()[pri:8, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:43 IST" name="loginSetup" finished-at="2022-10-03T13:22:49 IST" duration-ms="5851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="validateRememberMeCheckBox()[pri:9, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:49 IST" name="validateRememberMeCheckBox" finished-at="2022-10-03T13:22:57 IST" duration-ms="7756" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at com.idream.iprepLearning.Pages.SignInPage.validateRememberMe(SignInPage.java:80)
at com.idream.iprepLearning.tests.RegisterationpageTest.validateRememberMeCheckBox(RegisterationpageTest.java:145)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRememberMeCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:57 IST" name="tearDown" finished-at="2022-10-03T13:22:58 IST" duration-ms="1629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRememberMeCheckBox status=FAILURE method=RegisterationpageTest.validateRememberMeCheckBox()[pri:9, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:22:58 IST" name="loginSetup" finished-at="2022-10-03T13:23:03 IST" duration-ms="5257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="validateChangeBoard()[pri:10, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:23:03 IST" name="validateChangeBoard" finished-at="2022-10-03T13:23:28 IST" duration-ms="24855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateChangeBoard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:23:28 IST" name="tearDown" finished-at="2022-10-03T13:23:30 IST" duration-ms="1545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateChangeBoard status=SUCCESS method=RegisterationpageTest.validateChangeBoard()[pri:10, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:23:30 IST" name="loginSetup" finished-at="2022-10-03T13:23:35 IST" duration-ms="5204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="onBoard()[pri:11, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:23:35 IST" name="onBoard" finished-at="2022-10-03T13:24:09 IST" duration-ms="33613" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=105.0.5195.127)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-9IJIBQD', ip: '192.168.0.111', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fa04bfd7632c8f508fe6d5db148533b0, clickElement {id=ae6afbba-460d-477a-bd12-c33aa29d8894}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57794}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57794/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (fa04bfd7632c8f508fe6d5db148533b0)] -> xpath: //button[text()='Learn Now']]
Session ID: fa04bfd7632c8f508fe6d5db148533b0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=105.0.5195.127)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-9IJIBQD', ip: '192.168.0.111', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fa04bfd7632c8f508fe6d5db148533b0, clickElement {id=ae6afbba-460d-477a-bd12-c33aa29d8894}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57794}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57794/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (fa04bfd7632c8f508fe6d5db148533b0)] -> xpath: //button[text()='Learn Now']]
Session ID: fa04bfd7632c8f508fe6d5db148533b0
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy18.click(Unknown Source)
at com.idream.iprepLearning.Pages.DashBoardPage.onBoardFlow(DashBoardPage.java:92)
at com.idream.iprepLearning.tests.RegisterationpageTest.onBoard(RegisterationpageTest.java:166)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onBoard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:24:09 IST" name="tearDown" finished-at="2022-10-03T13:24:11 IST" duration-ms="2716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=onBoard status=FAILURE method=RegisterationpageTest.onBoard()[pri:11, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.idream.iprepLearning.tests.RegisterationpageTest@31ea9581]" started-at="2022-10-03T13:24:11 IST" name="endReport" finished-at="2022-10-03T13:24:14 IST" duration-ms="2761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.idream.iprepLearning.tests.RegisterationpageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
